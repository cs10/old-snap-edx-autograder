<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="compose %&apos;f&apos; %&apos;g&apos;" type="reporter" category="control"><header></header><code></code><inputs><input type="%repRing"></input><input type="%repRing"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reifyReporter"><autolambda><block s="evaluate"><block var="f"/><list><block s="evaluate"><block var="g"/><list><l></l></list></block></list></block></autolambda><list></list></block></block></script></block></script></block-definition><block-definition s="ignore %&apos;value&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%s"></input></inputs></block-definition><block-definition s="%&apos;#&apos; repeat %&apos;num&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%upvar"></input><input type="%n"> </input><input type="%cs"></input></inputs><script><block s="doSetVar"><l>#</l><l>0</l></block><block s="doRepeat"><block var="num"/><script><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="for %&apos;i&apos; = %&apos;start&apos; to %&apos;end&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%upvar"></input><input type="%n">1</input><input type="%n">10</input><input type="%cs"></input></inputs><script><block s="doDeclareVariables"><list><l>step</l></list></block><block s="doIfElse"><block s="reportGreaterThan"><block var="start"/><block var="end"/></block><script><block s="doSetVar"><l>step</l><l>-1</l></block></script><script><block s="doSetVar"><l>step</l><l>1</l></block></script></block><custom-block s="for %upvar = %n step %n to %n %cs"><l>iii</l><block var="start"/><block var="step"/><block var="end"/><script><block s="doSetVar"><l>i</l><block var="iii"/></block><block s="doRun"><block var="action"/><list></list></block></script></custom-block></script></block-definition><block-definition s="for %&apos;i&apos; = %&apos;start&apos; step %&apos;step&apos; to %&apos;end&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%upvar"></input><input type="%n">1</input><input type="%n">1</input><input type="%n">10</input><input type="%cs"></input></inputs><script><block s="doDeclareVariables"><list><l>test</l></list></block><block s="doSetVar"><l>i</l><block var="start"/></block><block s="doIfElse"><block s="reportLessThan"><block var="step"/><l>0</l></block><script><block s="doSetVar"><l>test</l><block s="reifyReporter"><autolambda><block s="reportLessThan"><block var="i"/><block var="end"/></block></autolambda><list></list></block></block></script><script><block s="doSetVar"><l>test</l><block s="reifyReporter"><autolambda><block s="reportGreaterThan"><block var="i"/><block var="end"/></block></autolambda><list></list></block></block></script></block><block s="doUntil"><block s="evaluate"><block var="test"/><list></list></block><script><block s="doRun"><block var="action"/><list></list></block><block s="doChangeVar"><l>i</l><block var="step"/></block></script></block></script></block-definition><block-definition s="glide %&apos;dist&apos; steps in %&apos;time&apos; secs" type="command" category="motion"><header></header><code></code><inputs><input type="%n">100</input><input type="%n">1</input></inputs><script><block s="doGlide"><block var="time"/><block s="reportSum"><block s="xPosition"></block><block s="reportProduct"><block var="dist"/><block s="reportMonadic"><l><option>cos</option></l><block s="reportDifference"><l>90</l><block s="direction"></block></block></block></block></block><block s="reportSum"><block s="yPosition"></block><block s="reportProduct"><block var="dist"/><block s="reportMonadic"><l><option>sin</option></l><block s="reportDifference"><l>90</l><block s="direction"></block></block></block></block></block></block></script></block-definition><block-definition s="go to %&apos;pos&apos;" type="command" category="motion"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="gotoXY"><block s="reportListItem"><l>1</l><block var="pos"/></block><block s="reportListItem"><l>2</l><block var="pos"/></block></block></script></block-definition><block-definition s="position" type="reporter" category="motion"><header></header><code></code><inputs></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block></script></block></script></block-definition><block-definition s="switch ( %&apos;input&apos; ) %&apos;cmdArr&apos; else %&apos;default&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%s"></input><input type="%mult%repRing"></input><input type="%cs"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><l>0</l></block><block s="doRepeat"><block s="reportListLength"><block var="cmdArr"/></block><script><block s="doChangeVar"><l>a</l><l>1</l></block><block s="doIf"><block s="evaluate"><block s="reportListItem"><block var="a"/><block var="cmdArr"/></block><list><block var="input"/></list></block><script><block s="doStopBlock"><l><option>this block</option></l></block></script></block></script></block><block s="doRun"><block var="default"/><list><block var="input"/></list></block></script></block></script></block-definition><block-definition s="if %&apos;test&apos; then %&apos;yes&apos; else %&apos;no&apos;" type="reporter" category="control"><header></header><code></code><inputs><input type="%b"></input><input type="%anyUE"></input><input type="%anyUE"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block var="test"/><script><block s="doReport"><block s="evaluate"><block var="yes"/><list></list></block></block></script><script><block s="doReport"><block s="evaluate"><block var="no"/><list></list></block></block></script></block></script></block></script></block-definition><block-definition s="pigl %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doIf"><block s="reportEquals"><block var="word"/><l></l></block><script><block s="doReport"><block s="reportQuotient"><l>1</l><l>0</l></block></block></script></block><block s="doReport"><custom-block s="if %b then %anyUE else %anyUE"><block s="reportListContainsItem"><block s="reportNewList"><list><l>a</l><l>e</l><l>i</l><l>o</l><l>u</l></list></block><block s="reportLetter"><l>1</l><block var="word"/></block></block><block s="reportJoinWords"><list><block var="word"/><l>ay</l></list></block><custom-block s="pigl %txt"><block s="reportJoinWords"><list><custom-block s="all but first letter of %txt"><block var="word"/></custom-block><block s="reportLetter"><l>1</l><block var="word"/></block></list></block></custom-block></custom-block></block></script></block-definition><block-definition s="switch.case %&apos;test&apos; : %&apos;code&apos;" type="reporter" category="control"><header></header><code></code><inputs><input type="%predRing"></input><input type="%cs"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reifyScript"><script><block s="doIfElse"><block s="evaluate"><block var="test"/><list><block var="value"/></list></block><script><block s="doRun"><block var="code"/><list><block var="value"/></list></block><block s="doReport"><block s="reportTrue"></block></block></script><script><block s="doReport"><block s="reportFalse"></block></block></script></block></script><list><l>value</l></list></block></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; cascade until %&apos;test&apos; %&apos;function&apos; of %&apos;start&apos;" type="reporter" category="control"><header></header><code></code><inputs><input type="%upvar"></input><input type="%predRing"></input><input type="%repRing"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block var="start"/></block><block s="doSetVar"><l>#</l><l>0</l></block><block s="doUntil"><block s="evaluate"><block var="test"/><list><block var="result"/></list></block><script><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doSetVar"><l>result</l><block s="evaluate"><block var="function"/><list><block var="result"/></list></block></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; cascade %&apos;num&apos; times %&apos;function&apos; of %&apos;start&apos;" type="reporter" category="control"><header></header><code></code><inputs><input type="%upvar"></input><input type="%n"> </input><input type="%repRing"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block var="start"/></block><block s="doSetVar"><l>#</l><l>0</l></block><block s="doRepeat"><block var="num"/><script><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doSetVar"><l>result</l><block s="evaluate"><block var="function"/><list><block var="result"/></list></block></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="%&apos;this&apos; is one of %&apos;those&apos;" type="predicate" category="operators"><header></header><code></code><inputs><input type="%s"></input><input type="%mult%s"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportListContainsItem"><block var="those"/><block var="this"/></block></block></script></block></script></block-definition><block-definition s="accumulate with %&apos;function&apos; words of %&apos;sentence&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%repRing"></input><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>split</l></list></block><block s="doSetVar"><l>split</l><custom-block s="first word and butfirst of %txt"><block var="sentence"/></custom-block></block><block s="doIf"><block s="reportEquals"><block s="reportListItem"><l>2</l><block var="split"/></block><l></l></block><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="split"/></block></block></script></block><block s="doReport"><block s="evaluate"><block var="function"/><list><block s="reportListItem"><l>1</l><block var="split"/></block><custom-block s="accumulate with %repRing words of %txt"><block var="function"/><block s="reportListItem"><l>2</l><block var="split"/></block></custom-block></list></block></block></script></block></script></block-definition><block-definition s="all but first letter of %&apos;string&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>i</l></list></block><block s="doSetVar"><l>result</l><l></l></block><block s="doSetVar"><l>i</l><l>2</l></block><block s="doUntil"><block s="reportGreaterThan"><block var="i"/><block s="reportStringSize"><block var="string"/></block></block><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><block s="reportLetter"><block var="i"/><block var="string"/></block></list></block></block><block s="doChangeVar"><l>i</l><l>1</l></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="all but first word of %&apos;sentence&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportListItem"><l>2</l><custom-block s="first word and butfirst of %txt"><block var="sentence"/></custom-block></block></block></script></block></script></block-definition><block-definition s="all but last letter of %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>i</l></list></block><block s="doSetVar"><l>result</l><l></l></block><block s="doSetVar"><l>i</l><l>1</l></block><block s="doUntil"><block s="reportEquals"><block var="i"/><block s="reportStringSize"><block var="word"/></block></block><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><block s="reportLetter"><block var="i"/><block var="word"/></block></list></block></block><block s="doChangeVar"><l>i</l><l>1</l></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="all but last word of %&apos;sentence&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportEquals"><block s="reportStringSize"><block var="sentence"/></block><l>0</l></block><script><block s="doReport"><l></l></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportLetter"><block s="reportStringSize"><block var="sentence"/></block><block var="sentence"/></block><l> </l></block><script><block s="doReport"><custom-block s="all but last letter of %txt"><block var="sentence"/></custom-block></block></script><script><block s="doReport"><custom-block s="all but last word of %txt"><custom-block s="all but last letter of %txt"><block var="sentence"/></custom-block></custom-block></block></script></block></script></block></script></block></script></block-definition><block-definition s="first word and butfirst of %&apos;sentence&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><block s="reportStringSize"><block var="sentence"/></block><l>0</l></block><script><block s="doReport"><block s="reportNewList"><list><l></l><l></l></list></block></block></script></block><block s="doDeclareVariables"><list><l>first</l><l>bf</l><l>index</l><l>flag</l></list></block><block s="doSetVar"><l>first</l><l></l></block><block s="doSetVar"><l>bf</l><l></l></block><block s="doSetVar"><l>index</l><l>1</l></block><block s="doSetVar"><l>flag</l><block s="reportFalse"></block></block><block s="doUntil"><block s="reportGreaterThan"><block var="index"/><block s="reportStringSize"><block var="sentence"/></block></block><script><block s="doIfElse"><block var="flag"/><script><block s="doSetVar"><l>bf</l><block s="reportJoinWords"><list><block var="bf"/><block s="reportLetter"><block var="index"/><block var="sentence"/></block></list></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportLetter"><block var="index"/><block var="sentence"/></block><l> </l></block><script><block s="doSetVar"><l>flag</l><block s="reportTrue"></block></block></script><script><block s="doSetVar"><l>first</l><block s="reportJoinWords"><list><block var="first"/><block s="reportLetter"><block var="index"/><block var="sentence"/></block></list></block></block></script></block></script></block><block s="doChangeVar"><l>index</l><l>1</l></block></script></block><block s="doReport"><block s="reportNewList"><list><block var="first"/><block var="bf"/></list></block></block></script></block></script></block-definition><block-definition s="first word of %&apos;sentence&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportListItem"><l>1</l><custom-block s="first word and butfirst of %txt"><block var="sentence"/></custom-block></block></block></script></block></script></block-definition><block-definition s="id %&apos;x&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block var="x"/></block></script></block></script></block-definition><block-definition s="join words %&apos;words&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%mult%s"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>smaller</l></list></block><block s="doIfElse"><block s="reportEquals"><block s="reportListLength"><block var="words"/></block><l>0</l></block><script><block s="doReport"><l></l></block></script><script><block s="doSetVar"><l>smaller</l><block s="evaluate"><block s="reifyReporter"><autolambda><custom-block s="join words %mult%s"><list></list></custom-block></autolambda><list></list></block><custom-block s="all but first of %l"><block var="words"/></custom-block></block></block><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="words"/></block><l></l></block><script><block s="doReport"><block var="smaller"/></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="smaller"/><l></l></block><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="words"/></block></block></script><script><block s="doReport"><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block var="words"/></block><block s="reportJoinWords"><list><l> </l><block var="smaller"/></list></block></list></block></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="last letter of %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportLetter"><block s="reportStringSize"><block var="word"/></block><block var="word"/></block></block></script></block></script></block-definition><block-definition s="last word of %&apos;sentence&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportEquals"><block s="reportStringSize"><block var="sentence"/></block><l>0</l></block><script><block s="doReport"><l></l></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportLetter"><block s="reportStringSize"><block var="sentence"/></block><block var="sentence"/></block><l> </l></block><script><block s="doReport"><l></l></block></script><script><block s="doReport"><block s="reportJoinWords"><list><custom-block s="last word of %txt"><custom-block s="all but last letter of %txt"><block var="sentence"/></custom-block></custom-block><block s="reportLetter"><block s="reportStringSize"><block var="sentence"/></block><block var="sentence"/></block></list></block></block></script></block></script></block></script></block></script></block-definition><block-definition s="sentence-&gt;list %&apos;sent&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>i</l><l>word</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doIf"><block s="reportEquals"><block var="sent"/><l></l></block><script><block s="doReport"><block var="result"/></block></script></block><block s="doSetVar"><l>i</l><l>1</l></block><block s="doSetVar"><l>word</l><l></l></block><block s="doUntil"><block s="reportGreaterThan"><block var="i"/><block s="reportStringSize"><block var="sent"/></block></block><script><block s="doIfElse"><block s="reportEquals"><block s="reportLetter"><block var="i"/><block var="sent"/></block><l> </l></block><script><block s="doAddToList"><block var="word"/><block var="result"/></block><block s="doSetVar"><l>word</l><l></l></block></script><script><block s="doSetVar"><l>word</l><block s="reportJoinWords"><list><block var="word"/><block s="reportLetter"><block var="i"/><block var="sent"/></block></list></block></block></script></block><block s="doChangeVar"><l>i</l><l>1</l></block></script></block><block s="doAddToList"><block var="word"/><block var="result"/></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; for each item of %&apos;lists&apos; %&apos;action&apos;" type="command" category="lists"><header></header><code></code><inputs><input type="%upvar"></input><input type="%mult%l"></input><input type="%cs"></input></inputs><script><block s="doWarp"><script><block s="doSetVar"><l>#</l><l>0</l></block><block s="doRepeat"><block s="reportListLength"><block s="reportListItem"><l>1</l><block var="lists"/></block></block><script><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doRun"><block var="action"/><custom-block s="%upvar map %repRing over %mult%l"><l>####</l><block s="reifyReporter"><autolambda><block s="reportListItem"><block var="#"/><l/></block></autolambda><list></list></block><list><block var="lists"/></list></custom-block></block></script></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; keep items such that %&apos;pred&apos; from %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%upvar"></input><input type="%predRing"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>#</l><l>0</l></block><block s="doRepeat"><block s="reportListLength"><block var="list"/></block><script><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doIf"><block s="evaluate"><block var="pred"/><list><block s="reportListItem"><block var="#"/><block var="list"/></block></list></block><script><block s="doAddToList"><block s="reportListItem"><block var="#"/><block var="list"/></block><block var="result"/></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="%&apos;#&apos; map %&apos;function&apos; over %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%upvar"></input><input type="%repRing"></input><input type="%mult%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>#</l><l>0</l></block><block s="doIfElse"><block s="reportEquals"><block s="reportListLength"><block var="lists"/></block><l>1</l></block><script><block s="doRepeat"><block s="reportListLength"><block s="reportListItem"><l>1</l><block var="lists"/></block></block><script><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doAddToList"><block s="evaluate"><block var="function"/><list><block s="reportListItem"><block var="#"/><block s="reportListItem"><l>1</l><block var="lists"/></block></block></list></block><block var="result"/></block></script></block></script><script><block s="doRepeat"><block s="reportListLength"><block s="reportListItem"><l>1</l><block var="lists"/></block></block><script><block s="doChangeVar"><l>#</l><l>1</l></block><block s="doAddToList"><block s="evaluate"><block var="function"/><custom-block s="%upvar map %repRing over %mult%l"><l>i</l><block s="reifyReporter"><autolambda><block s="reportListItem"><block var="#"/><l/></block></autolambda><list></list></block><list><block var="lists"/></list></custom-block></block><block var="result"/></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="adjoin %&apos;item&apos; to %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%s"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list><block var="item"/></list></block></block><custom-block s="%upvar for each item of %mult%l %cs"><l>#</l><list><block var="list"/></list><script><block s="doAddToList"><l></l><block var="result"/></block></script></custom-block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="adjoin to %&apos;list&apos; this item %&apos;new&apos; on the right" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><custom-block s="%upvar for each item of %mult%l %cs"><l>#</l><list><block var="list"/></list><script><block s="doAddToList"><l></l><block var="result"/></block></script></custom-block><block s="doAddToList"><block var="new"/><block var="result"/></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="all but first of %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>i</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>i</l><l>2</l></block><block s="doUntil"><block s="reportGreaterThan"><block var="i"/><block s="reportListLength"><block var="list"/></block></block><script><block s="doAddToList"><block s="reportListItem"><block var="i"/><block var="list"/></block><block var="result"/></block><block s="doChangeVar"><l>i</l><l>1</l></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="append %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%mult%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>i</l><l>j</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>i</l><l>0</l></block><block s="doRepeat"><block s="reportListLength"><block var="lists"/></block><script><block s="doChangeVar"><l>i</l><l>1</l></block><block s="doSetVar"><l>j</l><l>0</l></block><block s="doRepeat"><block s="reportListLength"><block s="reportListItem"><block var="i"/><block var="lists"/></block></block><script><block s="doChangeVar"><l>j</l><l>1</l></block><block s="doAddToList"><block s="reportListItem"><block var="j"/><block s="reportListItem"><block var="i"/><block var="lists"/></block></block><block var="result"/></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="combine with %&apos;function&apos; items of %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%repRing"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>i</l></list></block><block s="doSetVar"><l>result</l><block s="reportListItem"><l>1</l><block var="list"/></block></block><block s="doSetVar"><l>i</l><l>2</l></block><block s="doUntil"><block s="reportGreaterThan"><block var="i"/><block s="reportListLength"><block var="list"/></block></block><script><block s="doSetVar"><l>result</l><block s="evaluate"><block var="function"/><list><block var="result"/><block s="reportListItem"><block var="i"/><block var="list"/></block></list></block></block><block s="doChangeVar"><l>i</l><l>1</l></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="crossmap %&apos;function&apos; %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%repRing"></input><input type="%mult%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><custom-block s="%upvar map %repRing over %mult%l"><l>#</l><block s="reifyReporter"><autolambda><block s="evaluate"><block var="function"/><block var="#1"/></block></autolambda><list><l>#1</l></list></block><list><block s="evaluate"><block s="reifyReporter"><autolambda><custom-block s="crossproduct %mult%l"><list></list></custom-block></autolambda><list></list></block><block var="lists"/></block></list></custom-block></block></script></block></script></block-definition><block-definition s="crossproduct %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%mult%l"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportEquals"><block s="reportListLength"><block var="lists"/></block><l>1</l></block><script><block s="doReport"><custom-block s="%upvar map %repRing over %mult%l"><l>#</l><block s="reifyReporter"><autolambda><block s="reportNewList"><list><l></l></list></block></autolambda><list></list></block><list><block s="reportListItem"><l>1</l><block var="lists"/></block></list></custom-block></block></script><script><block s="doDeclareVariables"><list><l>small</l></list></block><block s="doSetVar"><l>small</l><block s="evaluate"><block s="reifyReporter"><autolambda><custom-block s="crossproduct %mult%l"><list></list></custom-block></autolambda><list></list></block><custom-block s="all but first of %l"><block var="lists"/></custom-block></block></block><block s="doReport"><custom-block s="combine with %repRing items of %l"><block s="reifyReporter"><autolambda><custom-block s="append %mult%l"><list><l/><l/></list></custom-block></autolambda><list></list></block><custom-block s="%upvar map %repRing over %mult%l"><l>#</l><block s="reifyReporter"><autolambda><custom-block s="%upvar map %repRing over %mult%l"><l>#</l><block s="reifyReporter"><autolambda><custom-block s="adjoin %s to %l"><block var="newitem"/><l/></custom-block></autolambda><list></list></block><list><block var="small"/></list></custom-block></autolambda><list><l>newitem</l></list></block><list><block s="reportListItem"><l>1</l><block var="lists"/></block></list></custom-block></custom-block></block></script></block></script></block></script></block-definition><block-definition s="empty? %&apos;list&apos;" type="predicate" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportEquals"><block s="reportListLength"><block var="list"/></block><l>0</l></block></block></script></block></script></block-definition><block-definition s="make all combinations of items of %&apos;lists&apos; combining with %&apos;combiner&apos; building up from %&apos;sofar&apos; and do %&apos;action&apos; for each combination" type="command" category="lists"><header></header><code></code><inputs><input type="%mult%l"></input><input type="%repRing"></input><input type="%s"></input><input type="%cs"></input></inputs><script><block s="doIfElse"><custom-block s="empty? %l"><block var="lists"/></custom-block><script><block s="doRun"><block var="action"/><list><block var="sofar"/></list></block></script><script><custom-block s="%upvar for each item of %mult%l %cs"><l>#</l><list><block s="reportListItem"><l>1</l><block var="lists"/></block></list><block s="reifyScript"><script><block s="doRun"><block s="reifyScript"><script><custom-block s="make all combinations of items of %mult%l combining with %repRing building up from %s and do %cs for each combination"><list></list><block var="combiner"/><block s="evaluate"><block var="combiner"/><list><block var="sofar"/><block var="new"/></list></block><block var="action"/></custom-block></script><list></list></block><custom-block s="all but first of %l"><block var="lists"/></custom-block></block></script><list><l>new</l></list></block></custom-block></script></block></script></block-definition><block-definition s="remove duplicates from %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><custom-block s="%upvar for each item of %mult%l %cs"><l>#</l><list><block var="list"/></list><script><block s="doIf"><block s="reportNot"><block s="reportListContainsItem"><block var="result"/><l></l></block></block><script><block s="doAddToList"><l></l><block var="result"/></block></script></block></script></custom-block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="reverse %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><custom-block s="%upvar for each item of %mult%l %cs"><l>#</l><list><block var="list"/></list><script><block s="doInsertInList"><l></l><l>1</l><block var="result"/></block></script></custom-block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="repeat %&apos;action&apos; until %&apos;test&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%cs"></input><input type="%boolUE"></input></inputs><script><block s="doRun"><block var="action"/><list></list></block><block s="doUntil"><block s="evaluate"><block var="test"/><list></list></block><script><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="repeat %&apos;action&apos; while %&apos;test&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%cs"></input><input type="%boolUE"></input></inputs><script><block s="doRun"><block var="action"/><list></list></block><custom-block s="repeat while %boolUE %cs"><block var="test"/><block var="action"/></custom-block></script></block-definition><block-definition s="repeat while %&apos;test&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><inputs><input type="%boolUE"></input><input type="%cs"></input></inputs><script><block s="doUntil"><block s="reportNot"><block s="evaluate"><block var="test"/><list></list></block></block><script><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="substitute-triple %&apos;triple&apos; %&apos;board&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><custom-block s="%upvar map %repRing over %mult%l"><l>#</l><block s="reifyReporter"><autolambda><custom-block s="substitute-letter %n %l"><l> </l><block var="board"/></custom-block></autolambda><list></list></block><list><block var="triple"/></list></custom-block></block></script></block></script></block-definition><block-definition s="appearances %&apos;item&apos; %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%s"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportListLength"><custom-block s="%upvar keep items such that %predRing from %l"><l>#</l><block s="reifyReporter"><autolambda><block s="reportEquals"><l></l><block var="item"/></block></autolambda><list></list></block><block var="list"/></custom-block></block></block></script></block></script></block-definition><block-definition s="opponent %&apos;letter&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%txt"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportEquals"><block var="letter"/><l>x</l></block><script><block s="doReport"><l>o</l></block></script><script><block s="doReport"><l>x</l></block></script></block></script></block></script></block-definition><block-definition s="find-triples %&apos;board&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><custom-block s="%upvar map %repRing over %mult%l"><l>#</l><block s="reifyReporter"><autolambda><custom-block s="substitute-triple %l %l"><l/><block var="board"/></custom-block></autolambda><list></list></block><list><block s="reportNewList"><list><block s="reportNewList"><list><l>1</l><l>2</l><l>3</l></list></block><block s="reportNewList"><list><l>4</l><l>5</l><l>6</l></list></block><block s="reportNewList"><list><l>7</l><l>8</l><l>9</l></list></block><block s="reportNewList"><list><l>1</l><l>4</l><l>7</l></list></block><block s="reportNewList"><list><l>2</l><l>5</l><l>8</l></list></block><block s="reportNewList"><list><l>3</l><l>6</l><l>9</l></list></block><block s="reportNewList"><list><l>1</l><l>5</l><l>9</l></list></block><block s="reportNewList"><list><l>3</l><l>5</l><l>7</l></list></block></list></block></list></custom-block></block></script></block></script></block-definition><block-definition s="choose-win? %&apos;triples&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><custom-block s="empty? %l"><block var="triples"/></custom-block><script><block s="doReport"><block s="reportFalse"></block></block></script><script><block s="doReport"><block s="reportListItem"><l>1</l><custom-block s="%upvar keep items such that %predRing from %l"><l>#</l><block s="reifyReporter"><autolambda><block s="reportIsA"><l></l><l><option>number</option></l></block></autolambda><list></list></block><block s="reportListItem"><l>1</l><block var="triples"/></block></custom-block></block></block></script></block></script></block></script></block-definition><block-definition s="substitute-letter %&apos;position&apos; %&apos;board&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%n"> </input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>piece-or-square</l></list></block><block s="doSetVar"><l>piece-or-square</l><block s="reportListItem"><block var="position"/><block var="board"/></block></block><block s="doIfElse"><block s="reportEquals"><block var="piece-or-square"/><l>_</l></block><script><block s="doReport"><block var="position"/></block></script><script><block s="doReport"><block var="piece-or-square"/></block></script></block></script></block></script></block-definition><block-definition s="list-&gt;sentence %&apos;list&apos;" type="reporter" category="operators"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportEquals"><block s="reportListLength"><block var="list"/></block><l>0</l></block><script><block s="doReport"><l></l></block></script><script><block s="doReport"><custom-block s="combine with %repRing items of %l"><block s="reifyReporter"><autolambda><custom-block s="join words %mult%s"><list><l></l><l></l></list></custom-block></autolambda><list></list></block><block var="list"/></custom-block></block></script></block></script></block></script></block-definition><block-definition s="triples-converter %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><custom-block s="list-&gt;sentence %l"><custom-block s="%upvar map %repRing over %mult%l"><l>#</l><block s="reifyReporter"><autolambda><block s="nop"></block></autolambda><list></list></block><list><block var="list"/></list></custom-block></custom-block></block></script></block></script></block-definition><block-definition s="is square %&apos;position&apos; in triple %&apos;triple&apos; free?" type="reporter" category="lists"><header></header><code></code><inputs><input type="%n"> </input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportNot"><custom-block s="empty? %l"><custom-block s="%upvar keep items such that %predRing from %l"><l>#</l><block s="reifyReporter"><autolambda><block s="reportEquals"><l></l><block var="position"/></block></autolambda><list></list></block><block var="triple"/></custom-block></custom-block></block></block></script></block></script></block-definition><block-definition s="first triple in triples %&apos;triples&apos; where square %&apos;square&apos; is free" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input><input type="%n"> </input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>relevant triples</l></list></block><block s="doSetVar"><l>relevant triples</l><custom-block s="%upvar keep items such that %predRing from %l"><l>#</l><block s="reifyReporter"><autolambda><custom-block s="is square %n in triple %l free?"><block var="square"/><l/></custom-block></autolambda><list></list></block><block var="triples"/></custom-block></block><block s="doIfElse"><custom-block s="empty? %l"><block var="relevant triples"/></custom-block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="relevant triples"/></block></block></script></block></script></block></script></block-definition><block-definition s="best-free-square %&apos;triples&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>possible-squares</l></list></block><block s="doSetVar"><l>possible-squares</l><block s="reportNewList"><list><l>5</l><l>1</l><l>3</l><l>7</l><l>9</l><l>2</l><l>4</l><l>6</l><l>8</l></list></block></block><block s="doReport"><block s="reportListItem"><l>1</l><custom-block s="%upvar keep items such that %predRing from %l"><l>#</l><block s="reifyReporter"><autolambda><block s="reportNot"><custom-block s="empty? %l"><custom-block s="first triple in triples %l where square %n is free"><block var="triples"/><l> </l></custom-block></custom-block></block></autolambda><list></list></block><block var="possible-squares"/></custom-block></block></block></script></block></script></block-definition><block-definition s="opponent-can-win? %&apos;triples&apos; %&apos;me&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doReport"><custom-block s="i-can-win? %l %s"><block var="triples"/><custom-block s="opponent %txt"><block var="me"/></custom-block></custom-block></block></script></block></script></block-definition><block-definition s="ttt-choose %&apos;triples&apos; %&apos;me&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>strategy result</l></list></block><block s="doSetVar"><l>strategy result</l><custom-block s="i-can-win? %l %s"><block var="triples"/><block var="me"/></custom-block></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="strategy result"/><block s="reportFalse"></block></block></block><script><block s="doReport"><block var="strategy result"/></block></script></block><block s="doSetVar"><l>strategy result</l><custom-block s="opponent-can-win? %l %s"><block var="triples"/><block var="me"/></custom-block></block><block s="doIf"><block s="reportNot"><block s="reportEquals"><block var="strategy result"/><block s="reportFalse"></block></block></block><script><block s="doReport"><block var="strategy result"/></block></script></block><block s="doReport"><custom-block s="best-free-square %l"><block var="triples"/></custom-block></block></script></block></script></block-definition><block-definition s="my-pair? %&apos;triple&apos; %&apos;me&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doReport"><block s="reportAnd"><block s="reportEquals"><custom-block s="appearances %s %l"><block var="me"/><block var="triple"/></custom-block><l>2</l></block><block s="reportEquals"><custom-block s="appearances %s %l"><custom-block s="opponent %txt"><block var="me"/></custom-block><block var="triple"/></custom-block><l>0</l></block></block></block></script></block></script></block-definition><block-definition s="i-can-win? %&apos;triples&apos; %&apos;me&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doReport"><custom-block s="choose-win? %l"><custom-block s="%upvar keep items such that %predRing from %l"><l>#</l><block s="reifyReporter"><autolambda><custom-block s="my-pair? %l %s"><l/><block var="me"/></custom-block></autolambda><list></list></block><block var="triples"/></custom-block></custom-block></block></script></block></script></block-definition><block-definition s="ttt %&apos;board&apos; %&apos;me&apos;" type="reporter" category="lists"><header></header><code></code><inputs><input type="%l"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doReport"><custom-block s="ttt-choose %l %s"><custom-block s="find-triples %l"><block var="board"/></custom-block><block var="me"/></custom-block></block></script></block></script></block-definition></blocks>